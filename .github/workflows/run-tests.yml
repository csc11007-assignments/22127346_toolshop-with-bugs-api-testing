# T√™n c·ªßa quy tr√¨nh CI/CD
name: Laravel CI/CD with Newman Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    
    steps:
      - name: Checkout Code ‚öôÔ∏è
        uses: actions/checkout@v4

      - name: Create Laravel .env file üîß
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "Creating Laravel .env file from .env.ci template..."
          # L·ªánh envsubst s·∫Ω ƒë·ªçc file .env.ci, t√¨m c√°c bi·∫øn $VAR v√† thay b·∫±ng gi√° tr·ªã t·ª´ secrets
          envsubst < sprint5-with-bugs/API/.env.ci > sprint5-with-bugs/API/.env
          echo ".env file created successfully."

      - name: Start Docker Containers
        run: docker compose up -d

      - name: Wait for Services
        run: sleep 60
        shell: bash

      - name: Setup Application
        run: |
          echo "Installing Composer dependencies..."
          docker compose run --rm composer

          echo "Fixing permissions..."
          docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

          echo "Running database migrations and seeding..."
          docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Postman CLI
        run: curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh 

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Run POST /products tests and save report
        run: |
          postman collection run 38289559-a4740aaf-0f68-4a2a-a1fa-fd223f413629 \
            -e 38289559-261db5bb-a116-4b6d-99ad-917e86b68034 \
            -i 38289559-106268c8-2706-4543-b11a-900c7c018a91 \
            -d sprint5-with-bugs/API/tests/api/post_products.csv\
            --reporters cli,junit,html \
            --reporter-junit-export post-products-report.xml \
            --reporter-html-export post-products-report.html || true
       
      - name: Run DELETE /products/productId tests and save report
        run: |
          postman collection run 38289559-a4740aaf-0f68-4a2a-a1fa-fd223f413629 \
            -e 38289559-261db5bb-a116-4b6d-99ad-917e86b68034 \
            -i 38289559-a37161b4-c8eb-456b-b576-a17fcb87a146 \
            -i 38289559-106268c8-2706-4543-b11a-900c7c018a91 \
            -i 38289559-8eb02283-f83b-4bbe-8558-be7a0e0eacd3 \
            -d sprint5-with-bugs/API/tests/api/del_products.csv \
            --reporters cli,junit,html \
            --reporter-junit-export del-products-report.xml \
            --reporter-html-export del-products-report.html || true

      - name: Run PUT /products/productId tests and save report
        run: |
          postman collection run 38289559-a4740aaf-0f68-4a2a-a1fa-fd223f413629 \
            -e 38289559-261db5bb-a116-4b6d-99ad-917e86b68034 \
            -i 38289559-106268c8-2706-4543-b11a-900c7c018a91 \
            -i 38289559-744fab8c-5d24-4ea0-88db-4d1ac5c3ab16 \
            -i 38289559-0929ce1d-9c50-477b-9c29-775417be4cae \
            -d sprint5-with-bugs/API/tests/api/put_products.csv \
            --reporters cli,junit,html \
            --reporter-junit-export put-products-report.xml \
            --reporter-html-export put-products-report.html || true
        
      - name: Publish Test Report üìä
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '*.xml' # Look for all XML files in the current directory
          check_name: 'Postman API Test Report'
          fail_on_failure: true # This is the key change to make the job fail if tests fail

      - name: Cleanup
        if: always()
        run: docker compose down -v